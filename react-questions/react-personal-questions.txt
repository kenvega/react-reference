What are all the possible ways to do form validations?
  this might be a way to check all libraries just like all ways to fetch-data


How error boundaries work in react and what is its benefit? Is it built-in or do I have to install something else?


what is the difference between
  defining a variable inside/outside the scope of a component?
    does it make any performance/memory difference?
    is the variable accessible in other components?
    is it created more times in one and not other?


how to catch all errors in your react app?
  how to console all of them automatically or send them to sentry to check them later


what are the most useful features of react dev tools that I can use?


if you have logic and view components

  and you have a state that is only going to be used and changed in the view component
  then is it better to still create it and pass it to the view component?
  or is it better to only create it in the view component?

  an experienced friend told me it's better to create state at the nearest level where it's going to be used
    so in this case, even with the names logic and view, it would be better to create that state in the view component


how to do debounce on inputs (only send request once the user stopped writing for a moment)



how to remove the <> and </> in this situation

  <div>
    {availableEvaluatorsForSelect.map(evaluator => (
      <>
        {evaluator.id !== currentOldEvaluator.id ? (
          <Option key={evaluator.full_name} value={evaluator.token}>
            ...
          </Option>
        ) : null}
      </>
    ))}
  </div>

  right now it will have a problem where you need a key for every element on what the map returns

  if you remove the <> and </> it will throw an error because you are trying to return javascript directly

  the only solution for this currently what just to filter before and create another variable you can map with

  one friend gave me this link to check: https://reactjs.org/docs/fragments.html#keyed-fragments

  --

  talking with a friend told me the way is to create a common variable for the repeating part and create use a wrapper for one side